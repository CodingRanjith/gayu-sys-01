Future onFetchData(CifSearch event, Emitter emit) async {
  emit(state.copyWith(status: ChifStatus.fetching));

  // Step 1: Login
  AsyncResponseHandler<AuthResponseModel> loginResponse =
      await authRepository.loginWithAccount(event.loginRequest);

  if (loginResponse.isRight()) {
    final authData = loginResponse.right;

    // Optional: Save auth token or userId if needed for next request
    final userId = authData.userId;

    // Step 2: Fetch CIF data (assuming CIF request needs userId or token)
    AsyncResponseHandler<ChifResponseModel> cifResponse =
        await authRepository.fetchCifData(CifRequest(userId: userId));

    if (cifResponse.isRight()) {
      emit(state.copyWith(
        status: ChifStatus.success,
        authResponseModel: authData,
        chifResponseModel: cifResponse.right,
      ));
    } else {
      emit(state.copyWith(
        status: ChifStatus.failure,
        errorMessage: cifResponse.left.message,
      ));
    }
  } else {
    emit(state.copyWith(
      status: ChifStatus.failure,
      errorMessage: loginResponse.left.message,
    ));
  }
}
